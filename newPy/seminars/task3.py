# ----------------------------------------------------------------------
# Вручную создайте список с целыми числами, которые
# повторяются. Получите новый список, который содержит
# уникальные (без повтора) элементы исходного списка.

# nums = [1, 12, 5, 2, 4, 4]
# print(list(sorted(set(nums))))

# for num in nums:
#     while nums.count(num) > 1:
#         nums.remove(num)
# print(sorted(nums))

# nums1 = [1, 12, 5, 2, 4, 4]
# res = []
# for num in nums:
#     if num not in res:
#         res.append(num)
# print(sorted(res))

# ----------------------------------------------------------------------

# Пользователь вводит данные. Сделайте проверку данных
# и преобразуйте если возможно в один из вариантов ниже:
# ✔ Целое положительное число
# ✔ Вещественное положительное или отрицательное число
# ✔ Строку в нижнем регистре, если в строке есть
# хотя бы одна заглавная буква
# ✔ Строку в верхнем регистре в остальных случаях

# atributed = ['asdfas', '654', '654', '6540.654', '-654',
#              'sdgffSDFsdf', 'Sdfsg', 'SDF321SDsdv312321cxv']
# for attr in atributed:
#     if attr.isdigit():
#         print(int(attr))
#     elif attr.isnumeric():
#         print(float(attr))
#     elif attr != attr.lower():
#         print(attr.lower())
#     else:
#         print(f'"!!!!!!!!!" {attr.upper()}')

# ----------------------------------------------------------------------

# Создайте вручную кортеж содержащий элементы разных типов.
# ✔ Получите из него словарь списков, где:
# ключ — тип элемента,
# значение — список элементов данного типа.

# my_tuple = ('str', 1, 2, 3, 11, -1123, '123', 'fgh',
#             True, False, 3.14, -15.56, [1, 33, 'strr'])
# res = {}
# for attr in my_tuple:
#     res.setdefault(type(attr), []).append(attr)
# print(res)


# ----------------------------------------------------------------------
# Создайте вручную список с повторяющимися элементами.
# ✔ Удалите из него все элементы, которые встречаются дважды.

# nums = [1, 2, 3, 3, 3, 4, 5, 6, 4, 5, 1, 2,
#         3, 2, 1, 4, 5, 6, 1, 2, 3, 1, 2, 8, 123]
# print(sorted(nums))
# for num in nums:
#     while nums.count(num) % 2 == 0 and num in nums:
#         nums.remove(num)
#         nums.remove(num)
# print(sorted(nums))

# ----------------------------------------------------------------------
# Создайте вручную список с повторяющимися целыми числами.
# Сформируйте список с порядковыми номерами
# нечётных элементов исходного списка.
# Нумерация начинается с единицы.

# my_list = [2, 4, 7, 8, 3, 5, 7, 4, 5, 667, 129, 12]
# odd_indices = [
#     index + 1 for index, element in enumerate(my_list, start=1) if element % 2 != 0]
# print(my_list, odd_indices, sep='\n')

# ----------------------------------------------------------------------
# Пользователь вводит строку текста. Вывести каждое слово с новой строки.
# ✔ Строки нумеруются начиная с единицы.
# ✔ Слова выводятся отсортированными согласно кодировки Unicode.
# ✔ Текст выравнивается по правому краю так, чтобы у самого длинного
# слова был один пробел между ним и номером строки.

# user_input = input('Введите текст: ')
# # user_input = 'hello worlds just do it'

# sorted_words = sorted(user_input.split(), key=lambda word: (len(word), word))
# max_word_len = len(sorted_words[-1])
# for i, word in enumerate(sorted_words, start=1):
#     print(f"{i} {word :>{max_word_len}}")

# ----------------------------------------------------------------------
# Пользователь вводит строку текста.
# ✔ Подсчитайте сколько раз встречается
# каждая буква в строке без использования
# метода count и с ним.
# ✔ Результат сохраните в словаре, где ключ —
# символ, а значение — частота встречи
# символа в строке.
# ✔ Обратите внимание на порядок ключей.
# Объясните почему они совпадают
# или не совпадают в ваших решениях.

# user_input = input('Введите текст: ')
user_input = 'hello worlds just do it'
result = {}
for attr in user_input:
    if attr.isalpha():
        result[attr] = result.get(attr, 0) + 1
print(result)
